#!/usr/bin/env ruby
# vim: filetype=ruby

# find-the-rule-component RCd5bbbc329db04f63bb507b7b1240c198
#   Find the RuleComponent with the given ID
# find-the-rule-component
#   Find the RuleComponent with the ID $REACTOR_RULE_COMPONENT_ID

require_relative '../pinhole.rb'
$Verbose = ENV['PINHOLE_VERBOSITY'] =~ /^\d+$/ ? $&.to_i :  2

ORG_ID = ENV['REACTOR_ORG_ID']
RULE_COMPONENT_ID_REGEX = /^RC[0-9a-fA-F]{32}$/

def determine_requested_rule_component_id
  if ARGV.size == 0 && ENV.has_key?('REACTOR_RULE_COMPONENT_ID') && ENV['REACTOR_RULE_COMPONENT_ID'] != ''
    arg = ENV['REACTOR_RULE_COMPONENT_ID']
    src = '$REACTOR_RULE_COMPONENT_ID'
  elsif ARGV.size == 1
    arg = ARGV[0]
    src = 'RULE_COMPONENT_ID'
  else
    puts "usage: #{$0} [RULE_COMPONENT_ID]"
    puts "       RULE_COMPONENT_ID defaults to \$REACTOR_RULE_COMPONENT_ID"
    exit 1
  end
  if arg !~ RULE_COMPONENT_ID_REGEX && arg != 'ANY' && arg != 'NEW' && arg != 'ONE'
    puts "Argument is not a RuleComponent ID: #{arg}"
    puts "#{src} must match #{RULE_COMPONENT_ID_REGEX}"
    exit 1
  end
  arg
end

def main
  id = determine_requested_rule_component_id
  blacksmith = Blacksmith.new
  puts "Server: #{blacksmith}" if $Verbose >= 1
  rule_component = RuleComponent.find(blacksmith, id: ARGV[0]).load
rescue GenericError => error
  puts "Exception:\n  #{error.to_s}"
end

main
