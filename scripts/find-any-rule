#!/usr/bin/env ruby
# vim: filetype=ruby

# find-any-rule
#   Find any rule on any property on any company in my org.
#
# find-any-rule PRd5bbbc329db04f63bb507b7b1240c198
#   Find any rule on the identified property

require_relative '../pinhole.rb'

ORG_ID = ENV['REACTOR_ORG_ID']
PROPERTY_ID_REGEX = /^PR[0-9a-fA-F]{32}$/
$Verbose = ENV['PINHOLE_VERBOSITY'] =~ /^\d+$/ ? $&.to_i :  2

def determine_requested_property_id
  if ARGV.size == 0
    if ENV.has_key?('REACTOR_PROPERTY_ID') && ENV['REACTOR_PROPERTY_ID'] != ''
      arg = ENV['REACTOR_PROPERTY_ID']
      src = '$REACTOR_PROPERTY_ID'
    else
      return 'ANY'
    end
  elsif ARGV.size == 1
    arg = ARGV[0]
    src = 'PROPERTY_ID'
  else
    puts "usage: #{$0} [PROPERTY_ID]"
    puts "       PROPERTY_ID defaults to \$REACTOR_PROPERTY_ID, or ANY"
    exit 1
  end
  if arg !~ PROPERTY_ID_REGEX
    puts "Argument is not a Property ID: #{arg}"
    puts "#{src} must match #{PROPERTY_ID_REGEX}"
    exit 1
  end
  arg
end

def main
  id = determine_requested_property_id
  blacksmith = Blacksmith.new
  puts "Server: #{blacksmith}" if $Verbose >= 1
  org = Org.find(blacksmith, id: ORG_ID)
  org.company('ANY').property('ANY').rule('ANY').load
rescue GenericError => error
  puts "Exception:\n  #{error.to_s}"
end

main
