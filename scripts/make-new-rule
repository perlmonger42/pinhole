#!/usr/bin/env ruby
# vim: filetype=ruby

# make-new-rule
#   Find any Company in my Org.
#   Find or fake one Property on the Company.
#   Make new Rule on the Property.
#
# make-new-rule PRa8139fa0d10547c8a6f64912fe6afed4
#   Make new Rule on the named Property.

require_relative '../pinhole.rb'

ORG_ID = ENV['REACTOR_ORG_ID']
PROPERTY_ID_REGEX = /^PR[0-9a-fA-F]{32}$/
$Verbose = ENV['PINHOLE_VERBOSITY'] =~ /^\d+$/ ? $&.to_i :  2

def die(msg)
  puts msg
  exit 1
end

def determine_requested_property_id
  if ARGV.size == 0
    if ENV.has_key?('REACTOR_PROPERTY_ID') && ENV['REACTOR_PROPERTY_ID'] != ''
      arg = ENV['REACTOR_PROPERTY_ID']
      src = '$REACTOR_PROPERTY_ID'
    else
      arg = 'ONE'
    end
  elsif ARGV.size == 1
    arg = ARGV[0]
    src = 'PROPERTY_ID'
  else
    puts "usage: #{$0} [PROPERTY_ID]"
    puts "       PROPERTY_ID defaults to \$REACTOR_PROPERTY_ID"
    exit 1
  end
  if arg !~ PROPERTY_ID_REGEX && arg != 'ANY' && arg != 'NEW' && arg != 'ONE'
    puts "Argument is not a Property ID: #{arg}"
    puts "#{src} must match #{PROPERTY_ID_REGEX}"
    exit 1
  end
  arg
end

def main
  id = determine_requested_property_id
  blacksmith = Blacksmith.new
  puts "Server: #{blacksmith}" if $Verbose >= 1
  org = Org.find(blacksmith, id: ORG_ID)
  property = org.company('ANY').property(id)
  property.rule('NEW')
rescue GenericError => error
  puts "Exception:\n  #{error.to_s}"
end

main
